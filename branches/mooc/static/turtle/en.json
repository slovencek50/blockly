{
    "@metadata": {
        "author": "Ellen Spertus <ellen.spertus@gmail.com>",
        "lastupdated": "2013-08-08 15:29:49.191081",
        "locale": "en",
        "messagedocumentation" : "qqq"
    },
    "Turtle.colourTooltip": "Changes the color of the pen.",
    "Turtle.degrees": "degrees",
    "Turtle.hideTurtle": "hide turtle",
    "Turtle.moveBackward": "move backward by",
    "Turtle.moveForward": "move forward by",
    "Turtle.moveForwardTooltip": "Moves the turtle forward.",
    "Turtle.moveTooltip": "Moves the turtle forward or backward by the specified amount.",
    "Turtle.nextLevel": "Congratulations!  Would you like to proceed to the next level?",
    "Turtle.penDown": "pen down",
    "Turtle.penTooltip": "Lifts or lowers the pen, to start or stop drawing.",
    "Turtle.penUp": "pen up",
    "Turtle.dots": "dots",
    "Turtle.setColour": "set color",
    "Turtle.setWidth": "set width",
    "Turtle.showTurtle": "show turtle",
    "Turtle.turnLeft": "turn left by",
    "Turtle.turnRightTooltip": "Turns the turtle right by the specified angle.",
    "Turtle.turnRight": "turn right by",
    "Turtle.turnTooltip": "Turns the turtle left or right by the specified number of degrees.",
    "Turtle.turtleVisibilityTooltip": "Makes the turtle (green circle and arrow) visible or invisible.",
    "Turtle.widthTooltip": "Changes the width of the pen.",
    "Turtle.loopVariable": "counter",
    "Turtle.drawASquare": "draw a square",
    "Turtle.lengthParameter": "length",
    "Turtle.drawASnowball": "draw a snowball",
    "Turtle.diameterParameter": "diameter",
    "Turtle.title": "Turtle Graphics %1",
    "Turtle.rightAnswer": "You got it!",
    "Turtle.wrongAnswer": "Wrong!  Try again.",
    "Turtle.showMe": "Show me",
    "Turtle.gotoNext": "Continue",
    "Turtle.level": "Level",
    "Turtle.instructions1_1": "I'm a turtle with a pen on my belly. Stack up blocks and press &quot;Run Program&quot; to make me draw the shown picture.",
    "Turtle.instructions1_2": "Draw a square, making each side a different color.",
    "Turtle.instructions1_3": "Make a square in only 3 blocks.  (Color blocks don't count.)",
    "Turtle.instructions1_4": "Draw a triangle whose sides are all 100 pixels and are in random colors.  You'll have to figure out how far to turn.",
    "Turtle.instructions1_5": "Draw a triangle and then a square.",
    "Turtle.instructions1_6": "Can you figure out how use a square and triangle to draw a red envelope?",
    "Turtle.instructions1_7": "See if you can draw these glasses in your favorite color.",
    "Turtle.instructions1_8": "After trying out these blocks, see what happens if you make them repeat 8 times.  It should look a little different every time you run it.",
    "Turtle.instructions1_9": "Figure out what number to replace the question marks with to draw a circle.",
    "Turtle.instructions1_10": "Draw anything you want. Some ideas are a stick figure, snowflake, or spiral. Have fun",
    "Turtle.instructions2_1": "Find the familiar blocks in the new categories to draw a square in your favorite color.",
    "Turtle.instructions2_2": "Use the new &quot;draw a square&quot; block, found in the &quot;Functions&quot; category, to draw a small green square.",
    "Turtle.instructions2_3": "Use the new block to draw 3 squares of size 100, each 120 degrees apart, in random colors.",
    "Turtle.instructions2_4": "Now change the code to draw 36 squares, each 10 degrees apart.",
    "Turtle.instructions2_5": "Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll need lots of blocks.",
    "Turtle.instructions2_6": "Modify this program to get the value of counter (in the Variables category) when drawing a square instead of the value 10.",
    "Turtle.instructions2_7": "How about setting a random color before drawing each square and moving forward 10 pixels after each one?",
    "Turtle.instructions2_8": "Replace the pale (disabled) blocks with a &quot;count with&quot; block to draw the same spiral.",
    "Turtle.instructions2_9": "Draw a snowman by using the new &quot;draw a snowball&quot; function with inputs of 70, 50, and 30.",
    "Turtle.instructions2_10": "Draw whatever you want.  One idea is experimenting with different types of spirals.  What happens if you change the turn amount, rather than the move amount?  TODO: Add starting blocks.",
    "Turtle.instructions3_1": "You can now see how the &quot;draw a square&quot; and &quot;draw a circle&quot; functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the &quot;draw a square&quot; block to actually draw a square.",
    "Turtle.instructions3_2": "Using the &quot;draw a square&quot; function as an example, create a &quot;draw a triangle&quot; function and use it.",
    "Turtle.instructions3_3": "Draw triangular fences around the cats and a square fence around the cow.",
    "Turtle.instructions3_4": "See if you can figure out how to use &quot;draw a square&quot; and &quot;draw a triangle&quot; (and some other blocks) to draw a house around the lion.",
    "Turtle.instructions3_5": "Now create and use a &quot;draw a house&quot; function to house two cats.",
    "Turtle.instructions3_6": "Using &quot;draw a square&quot; as an example, add an input named &quot;length&quot; to &quot;draw a triangle&quot;.  Then, draw triangles in different colors around the animals.",
    "Turtle.instructions3_7": "Add a &quot;length&quot; input to &quot;draw a house&quot; and build a big house for the elephant.",
    "Turtle.instructions3_8": "Here are all of the blocks from the previous level.  Modify &quot;draw a house&quot; so the turtle ends up at the bottom right corner of the new house.  Use this modified function to house all the animals.",
    "Turtle.instructions3_9": "Use a &quot;count with&quot; block to draw houses of size 50, 100, and 150.",
    "Turtle.instructions3_10": "You're now free to do whatever you want.  One idea is to try running this program with different turn amounts (higher or lower than 90).  Other ideas are to draw a star, circle, heart, or animal.",
    "Turtle.runProgram": "Run Program",
    "Turtle.resetProgram": "Reset",
    "Turtle.codeTooltip": "See generated JavaScript code.",
    "Turtle.catTurtle": "Actions",
    "Turtle.catColour": "Color",
    "Turtle.catProcedures": "Functions",
    "Turtle.catControl": "Loops",
    "Turtle.catMath": "Math",
    "Turtle.catVariables": "Variables"
}
